@{
    ViewData["Title"] = "Home Page";
}
@using System.Globalization
@model List<BridgeInfo>

@{
    var culture = new CultureInfo("fr-FR");
    Model.Sort((b1, b2) => DateTimeOffset.Compare(b1.ClosingDate, b2.ClosingDate));
    BridgeInfo boat = null;
    foreach (var info in Model)
    {
        if (DateTimeOffset.Compare(DateTimeOffset.Now, info.ClosingDate) < 0)
        {
            boat = info;
            break;
        }
    }
}

@section Scripts
    {
    <script>
        var closingDate = "<%= @boat.ClosingDate %>";
        var countDownDate = new Date(closingDate).getTime();
        // Update the count down every 1 second
        var x = setInterval(function() {

          // Get today's date and time
          var actualTime = new Date().getTime();

          // Find the distance between now and the count down date
          var countDown = countDownDate - actualTime ;

          // Time calculations for days, hours, minutes and seconds
          var days = Math.floor(countDown / (1000 * 60 * 60 * 24));
          var hours = Math.floor((countDown % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
          var minutes = Math.floor((countDown % (1000 * 60 * 60)) / (1000 * 60));
          var seconds = Math.floor((countDown % (1000 * 60)) / 1000);

          // Display the result in the element with id="demo"
          document.getElementById("countDown").style.color = "black";
          document.getElementById("countDown").style.fontSize= "50px";
          document.getElementById("countDown").innerHTML = days + "d " + hours + "h "
          + minutes + "m " + seconds + "s ";

          // If the count down is finished, write some text
          if (distance <= 0) {
            clearInterval(x);
            document.getElementById("countDown").style.color = "red";
            document.getElementById("countDown").style.fontSize= "40px";
            document.getElementById("countDown").innerHTML = "Pont fermé";
          }
        }, 1000);
    </script>
}

<div class="text-center">
    <h1 class="display-4">Prochaine fermeture</h1>

    <!-- Display the countdown timer in an element -->
    <p id="countDown"></p>
</div>
<table class="table">
    <thead>
        <tr>
            <th scope="col" class="text-center">Bateau</th>
            <th scope="col" class="text-center">Raison</th>
            <th scope="col" class="text-center">Durée</th>
            <th scope="col" class="text-center">Date</th>
            <th scope="col" class="text-center">Heure</th>
            <th scope="col" class="text-center">Date réouverture</th>
            <th scope="col" class="text-center">Heure réouverture</th>
            <th scope="col" class="text-center">Risque de embouteillage</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td class="text-center">@boat.BoatName</td>
            <td class="text-center">@boat.ClosingType</td>
            <td class="text-center">@boat.ReopeningDate.Subtract(@boat.ClosingDate)</td>
            <td class="text-center">@boat.ClosingDate.ToString("dddd d MMMM", culture)</td>
            <td class="text-center">@boat.ClosingDate.ToString("hh:mm", culture)</td>
            <td class="text-center">@boat.ReopeningDate.ToString("dddd d MMMM", culture)</td>
            <td class="text-center">@boat.ReopeningDate.ToString("hh:mm", culture)</td>
            @if (@boat.ClosingDate.Hour >= 7 && @boat.ClosingDate.Hour <= 9
                || @boat.ClosingDate.Hour >= 17 && @boat.ClosingDate.Hour <= 19
               )
            {
                <td class="text-center" style="color: red;">Perturbé</td>
            }
            else
            {
                <td class="text-center" style="color: green;">Fluide</td>
            }

        </tr>
    </tbody>
</table>